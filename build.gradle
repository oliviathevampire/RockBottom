group 'de.ellpeck.rockbottom'
version '0.3.7'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'maven-publish'

mainClassName = "de.ellpeck.rockbottom.Main"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    proguardEnabled = new File(gradle.proguardDir).exists()
}

buildscript {
    ext {
        proguardEnabled = new File(gradle.proguardDir).exists()
    }

    repositories {
        jcenter()
        if (proguardEnabled)
            flatDir dirs: gradle.proguardDir
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
        if (proguardEnabled)
            classpath ':proguard:'
    }
}

repositories {
    mavenCentral()

    maven {
        url "http://clojars.org/repo/"
    }
    maven {
        url "https://libraries.minecraft.net/"
    }
    maven {
        name = 'Fabric'
        url = 'http://maven.modmuss50.me/'
    }
    maven {
        name = 'SpongePowered'
        url = 'http://repo.spongepowered.org/maven'
    }

    maven { url = "https://jitpack.io"}
    jcenter()
    mavenLocal()
}

dependencies {
    compile project(":API")
    compile project(":Assets")

    //JOPT Simple for launch arg parsing
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '6.0-alpha-2'
    compile "com.mojang:brigadier:1.0.17"
    compile "org.apache.logging.log4j:log4j-api:2.8.1"
    compile "org.apache.logging.log4j:log4j-core:2.8.1"
    compile 'com.google.jimfs:jimfs:1.1'
    compile 'net.minecraft:launchwrapper:1.12'
    compile "net.fabricmc:fabric-loader:0.6.1+local"
    runtimeOnly "net.fabricmc:dev-launch-injector:0.1.0+build.3"
    compile "me.zeroeightsix:fiber:0.6.0-7"
}

jar {
    manifest {
        attributes("Main-Class": "de.ellpeck.rockbottom.Main")
    }
}

installDist {
    destinationDir = new File('build/temp/libs')
    exclude 'RockBottom-*'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact jar
        }
    }
    repositories {
        maven { url "file:///srv/nginx/maven" }
    }
}

if (proguardEnabled) {
    task myProguardTask(type: proguard.gradle.ProGuardTask) {
        configuration 'settings.pro'

        injars 'build/libs'
        outjars 'build/obf/Obf.jar'
    }
    myProguardTask.dependsOn(installDist)

    task deleteFiles(type: Delete) {
        delete 'build/libs/'
        delete 'build/classes/'
    }
    deleteFiles.dependsOn myProguardTask

    shadowJar {
        from file("${buildDir}/obf")
        from file("${buildDir}/temp/libs/lib")
        exclude '*.sha1'
        exclude '*.git'
    }.dependsOn.clear()
    shadowJar.dependsOn(deleteFiles)

    task buildObf {

    }
    buildObf.dependsOn build
    buildObf.dependsOn installDist
}
